// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Shoe {
  id            String      @id @default(auto())  @map("_id") @db.ObjectId
  name          String
  price         Float
  description   String
  availableSizes String[] // Storing the available sizes as an array of strings
  brand         String
 
  images        String[]   // Images will be handled in a separate model
  order          Order[]
  sale          Int

  createdAt     DateTime  @default(now()) // For filtering by new items
  updatedAt     DateTime  @updatedAt
}



model Order {
  id  String   @id @default(auto())  @map("_id") @db.ObjectId

  pricePaid Int
  deliveryAddress String
  updatedAt     DateTime  @updatedAt
  createdAt     DateTime  @default(now()) 
  shoeId String   @db.ObjectId  
  userId String  @db.ObjectId 
  shoes Shoe  @relation(fields: [shoeId], references: [id], onDelete: Restrict)
  orders  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

}
model User {
  id  String   @id @default(auto())  @map("_id") @db.ObjectId
  name String
  address String
  email String
  role String
  createdAt     DateTime  @default(now()) // For filtering by new items
  updatedAt     DateTime  @updatedAt
  orders Order[]
}
